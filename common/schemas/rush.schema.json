{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Rush Configuration",
    "description": "Configuration file for the Rush multi-package build tool",
    "type": "object",
  
    "oneOf": [
      {
        "type": "object",
        "required": ["npmVersion"],
        "properties": {
          "npmVersion": {
            "description": "The version of the NPM tool to install.",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        }
      },
      {
        "type": "object",
        "required": ["pnpmVersion"],
        "properties": {
          "pnpmVersion": {
            "description": "The version of the PNPM tool to install.",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        }
      }
    ],
  
    "properties": {
  
      "$schema": {
        "description": "Part of the JSON Schema standard, this optional keyword declares the URL of the schema that the file conforms to. Editors may download the schema and use it to perform syntax highlighting.",
        "type": "string"
      },
  
      "npmVersion": {
        "type": "string"
      },
  
      "pnpmVersion": {
        "type": "string"
      },
  
      "rushVersion": {
        "description": "The version of the Rush tool that will be used to build this repository.",
        "type": "string",
        "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
      },
      "nodeSupportedVersionRange": {
        "description": "A node-semver expression (e.g. \">=1.2.3 <2.0.0\", see https://github.com/npm/node-semver) indicating which versions of Node.js can safely be used to build this repository.  If omitted, no validation is performed.",
        "type": "string"
      },
      "projectFolderMinDepth": {
        "description": "The minimum folder depth for the projectFolder field.  The default value is 1, i.e. no slashes in the path name.",
        "type": "number"
      },
      "hotfixChangeEnabled": {
        "description": "Allows creation of hotfix changes. This feature is experimental so it is disabled by default.",
        "type": "boolean"
      },
      "projectFolderMaxDepth": {
        "description": "The maximum folder depth for the projectFolder field.  The default value is 2, i.e. a single slash in the path name.",
        "type": "number"
      },
      "approvedPackagesPolicy": {
        "description": "Controls a package review workflow driven by the two config files \"browser-approved-packages.json\" and \"nonbrowser-approved-packages.json\"",
        "type": "object",
        "properties": {
          "reviewCategories": {
            "description": "A list of category names that can be applied to each project, and then referenced in \"browser-approved-packages.json\" and \"nonbrowser-approved-packages.json\"",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoredNpmScopes": {
            "description": "A list of NPM package scopes that will be excluded from review (e.g. \"@types\")",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^@"
            }
          }
        },
        "additionalProperties": false
      },
      "gitPolicy": {
        "description": "If the project is stored in a Git repository, additional settings related to Git",
        "type": "object",
        "properties": {
          "allowedEmailRegExps": {
            "description": "A list of regular expressions describing allowable e-mail patterns for Git commits.  They are case-insensitive anchored JavaScript RegExps.  Example: \".*@example\\.com\"",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sampleEmail": {
            "description": "An example valid e-mail address for \"Mr. Example\" that conforms to one of the allowedEmailRegExps.  Example: \"mr-example@contoso\\.com\"",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "repository": {
        "description": "The repository location",
        "type": "object",
        "properties": {
          "url": {
            "description": "The remote url of the repository. If a value is provided, \"Rush change\" will use it to find the right remote to compare against.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "telemetryEnabled": {
        "description": "Indicates whether telemetry data should be collected and stored in the Rush temp folder during Rush runs.",
        "type": "boolean"
      },
      "projects": {
        "description": "A list of projects managed by this tool.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "packageName": {
              "description": "The NPM package name of the project.",
              "type": "string"
            },
            "projectFolder": {
              "description": "The path to the project folder relative to the Rush config file.",
              "type": "string"
            },
            "reviewCategory": {
              "description": "An optional category for usage in the \"browser-approved-packages.json\" and \"nonbrowser-approved-packages.json\" files.  Only strings from reviewCategories are allowed here.",
              "type": "string"
            },
            "cyclicDependencyProjects": {
              "description": "A list of local projects that appear as devDependencies for this project, but cannot be locally linked because it would create a cyclic dependency; instead, the last published version will be installed in the Common folder.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "shouldPublish": {
              "description": "A flag indicating that changes to this project will be published to npm, which affects the Rush change and publish workflows.",
              "type": "boolean"
            },
            "versionPolicyName": {
              "description": "An optional version policy associated with the project. Version policies are defined in \"version-policies.json file.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "packageName",
            "projectFolder"
          ]
        }
      },
      "eventHooks": {
        "description": "Hooks are customized script actions that Rush executes when specific events occur.",
        "type": "object",
        "properties": {
          "preRushInstall": {
            "description": "The list of scripts to run before the Rush install command starts.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postRushInstall": {
            "description": "The list of scripts to run after the Rush install command finishes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preRushBuild": {
            "description": "The list of scripts to run before the Rush build command starts.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postRushBuild": {
            "description": "The list of scripts to run after the Rush build command finishes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": false,
    "required": [
      "rushVersion",
      "projects"
    ]
  }
